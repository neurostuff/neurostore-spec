openapi: 3.0.0
info:
  title: Analysis Specification for Meta-analysis
  version: '1.0'
  description: api to create a meta-analysis specification
  contact:
    name: James D Kent
    url: 'https://github.com/jdkent'
    email: jamesdkent21@gmail.com
servers:
  - url: 'http://localhost:81/api'
    description: testing
paths:
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get User Info by User ID
      tags:
        - user
      description: Retrieve the information of the user with the matching user ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-return'
    put:
      summary: Update User Information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-return'
      tags:
        - user
      description: update information about a user
      security:
        - JSON-Web-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
  /users:
    parameters: []
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-list'
      description: List all users
      tags:
        - user
    post:
      summary: Create A New User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-return'
      security:
        - JSON-Web-Token: []
      tags:
        - user
      description: create a single user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
  /meta-analyses:
    get:
      summary: Your GET endpoint
      tags:
        - bundle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta-analysis-list'
        '400':
          $ref: '#/components/responses/bad-request'
      description: 'list all runnable meta-analysis, studyset, annotation bundles'
      parameters:
        - $ref: '#/components/parameters/nested'
    parameters: []
    post:
      summary: Create Bundle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta-analysis-return'
        '400':
          $ref: '#/components/responses/bad-request'
        '422':
          $ref: '#/components/responses/bad-request'
        '500':
          $ref: '#/components/responses/bad-request'
      tags:
        - bundle
      security:
        - JSON-Web-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/meta-analysis-post-body'
      description: 'create a new specification, studyset, annotation bundle'
  '/meta-analyses/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - bundle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta-analysis-return'
        '401':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/bad-request'
      description: 'get a bundle (specification, annotation, and studyset)'
      parameters:
        - $ref: '#/components/parameters/nested'
    put:
      summary: Update Bundle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta-analysis-return'
        '400':
          $ref: '#/components/responses/bad-request'
        '401':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/bad-request'
        '422':
          $ref: '#/components/responses/bad-request'
      tags:
        - bundle
      security:
        - JSON-Web-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/meta-analysis'
      description: update an existing meta-analysis (that has not yet been run)
  /studysets:
    get:
      summary: Your GET endpoint
      tags:
        - studyset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studyset-list'
        '400':
          $ref: '#/components/responses/bad-request'
      description: get a list of serialized studyset
    parameters: []
    post:
      summary: Create Studyset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studyset-return'
        '400':
          $ref: '#/components/responses/bad-request'
        '422':
          $ref: '#/components/responses/bad-request'
        '500':
          $ref: '#/components/responses/bad-request'
      tags:
        - studyset
      security:
        - JSON-Web-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studyset-post-body'
      description: create a new serialized studyset
  '/studysets/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - studyset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studyset-return'
        '401':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/bad-request'
      description: get a single serialized studyset
    put:
      summary: Update Studyset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studyset-return'
        '400':
          description: Bad Request
        '401':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/bad-request'
        '422':
          $ref: '#/components/responses/bad-request'
      tags:
        - studyset
      security:
        - JSON-Web-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/studyset'
      description: update an existing serialized studyset
  /annotations:
    get:
      summary: Your GET endpoint
      tags:
        - annotation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/annotation-list'
        '400':
          $ref: '#/components/responses/bad-request'
      description: get a list of serialized annotations
    post:
      summary: Create Annotation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/annotation-return'
        '400':
          $ref: '#/components/responses/bad-request'
        '422':
          $ref: '#/components/responses/bad-request'
        '500':
          $ref: '#/components/responses/bad-request'
      tags:
        - annotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/annotation-post-body'
      security:
        - JSON-Web-Token: []
      description: create a new serialized annotation
  '/annotations/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - annotation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/annotation-return'
        '401':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/bad-request'
      description: get a single annotation
    put:
      summary: Update Annotation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/annotation-return'
        '400':
          $ref: '#/components/responses/bad-request'
        '401':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/bad-request'
        '422':
          $ref: '#/components/responses/bad-request'
      tags:
        - annotation
      security:
        - JSON-Web-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/annotation-update'
      description: update an existing annotation
  /specifications:
    get:
      summary: Your GET endpoint
      tags:
        - meta-analysis
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/specification-list'
        '400':
          $ref: '#/components/responses/bad-request'
      description: list of meta-analysis specifications
    parameters: []
    post:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/specification-return'
        '400':
          $ref: '#/components/responses/bad-request'
        '422':
          description: Unprocessable Entity (WebDAV)
        '500':
          $ref: '#/components/responses/bad-request'
      tags:
        - meta-analysis
      security:
        - JSON-Web-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/specification-post-body'
      description: create a new meta-analysis specification
  '/specifications/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - meta-analysis
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/specification-return'
        '401':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/bad-request'
      description: get a meta-analysis specification
    put:
      summary: Update Meta-Analysis specification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/specification-return'
        '400':
          $ref: '#/components/responses/bad-request'
        '401':
          $ref: '#/components/responses/bad-request'
        '404':
          $ref: '#/components/responses/bad-request'
        '422':
          $ref: '#/components/responses/bad-request'
      tags:
        - meta-analysis
      security:
        - JSON-Web-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/specification'
      description: update an existing meta analysis specification
      operationId: ''
components:
  schemas:
    specification:
      title: specification
      type: object
      x-tags:
        - specification
      properties:
        type:
          type: string
        estimator:
          $ref: '#/components/schemas/estimator'
        mask:
          type: string
          nullable: true
        contrast:
          type: string
          nullable: true
        transformer:
          type: string
          nullable: true
        corrector:
          $ref: '#/components/schemas/corrector'
        filter:
          type: string
          nullable: true
    estimator:
      title: estimator
      type: object
      x-tags:
        - meta-analysis
      properties:
        type:
          type: string
        args:
          type: object
    corrector:
      title: corrector
      x-tags:
        - meta-analysis
      type: object
      nullable: true
      properties:
        type:
          type: string
        args:
          type: object
    meta-analysis:
      title: meta-analysis
      type: object
      description: ''
      x-tags:
        - meta-analysis
      properties:
        specification:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/specification'
        studyset:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/studyset'
        annotation:
          oneOf:
            - type: string
              nullable: true
            - $ref: '#/components/schemas/annotation'
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        internal_studyset_id:
          type: string
          writeOnly: true
        internal_annotation_id:
          type: string
          writeOnly: true
    annotation:
      title: annotation
      type: object
      x-tags:
        - annotation
      properties:
        neurostore_id:
          type: string
        snapshot:
          type: object
          nullable: true
        studyset:
          type: string
          readOnly: true
    studyset:
      title: studyset
      type: object
      x-tags:
        - studyset
      properties:
        neurostore_id:
          type: string
        snapshot:
          type: object
          nullable: true
    user:
      title: user
      type: object
      properties:
        external_id:
          type: string
      description: attributes of the user object
    read-only:
      title: read-only
      type: object
      properties:
        id:
          type: string
        updated_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          nullable: true
    specification-return:
      title: specification-return
      allOf:
        - $ref: '#/components/schemas/specification'
        - $ref: '#/components/schemas/read-only'
    specification-list:
      title: specification-list
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/specification-return'
        metadata:
          $ref: '#/components/schemas/metadata'
    annotation-return:
      title: annotation-return
      allOf:
        - $ref: '#/components/schemas/annotation'
        - $ref: '#/components/schemas/read-only'
    annotation-list:
      title: annotation-list
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/annotation-return'
        metadata:
          $ref: '#/components/schemas/metadata'
    studyset-return:
      title: studyset-return
      allOf:
        - $ref: '#/components/schemas/studyset'
        - $ref: '#/components/schemas/read-only'
    studyset-list:
      title: studyset-list
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/studyset-return'
        metadata:
          $ref: '#/components/schemas/metadata'
    meta-analysis-return:
      title: meta-analysis-return
      allOf:
        - $ref: '#/components/schemas/meta-analysis'
        - $ref: '#/components/schemas/read-only'
    meta-analysis-list:
      title: meta-analysis-list
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/meta-analysis-return'
        metadata:
          $ref: '#/components/schemas/metadata'
    user-return:
      title: user-return
      allOf:
        - $ref: '#/components/schemas/user'
        - $ref: '#/components/schemas/read-only'
    user-list:
      title: user-list
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/user-return'
        metadata:
          $ref: '#/components/schemas/metadata'
    metadata:
      title: metadata
      type: object
    annotation-update:
      title: annotation-post
      allOf:
        - type: object
          properties:
            internal_studyset_id:
              type: string
              writeOnly: true
        - $ref: '#/components/schemas/annotation'
    specification-post-body:
      title: specification-post-body
      allOf:
        - $ref: '#/components/schemas/specification'
        - required:
            - type
            - estimator
    annotation-post-body:
      title: annotation-post-body
      allOf:
        - $ref: '#/components/schemas/annotation-update'
        - required:
            - internal_studyset_id
    studyset-post-body:
      title: studyset-post-body
      allOf:
        - $ref: '#/components/schemas/studyset'
        - required:
            - neurostore_id
    meta-analysis-post-body:
      title: meta-analysis-post-body
      allOf:
        - $ref: '#/components/schemas/meta-analysis'
        - required:
            - internal_annotation_id
            - internal_studyset_id
  securitySchemes:
    JSON-Web-Token:
      type: http
      scheme: bearer
  parameters:
    nested:
      name: nested
      in: query
      required: false
      schema:
        type: string
      description: show nested component instead of id
  responses:
    bad-request:
      description: form when a request goes wrong
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
tags:
  - name: annotation
  - name: bundle
  - name: meta-analysis
  - name: studyset
  - name: user
